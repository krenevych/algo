
"""
Модифікуйте алгоритм бульбашкового сортування,
перевіркою на кожному проході чи відсортований вже масив.
Порівняйте час виконання обох програм.
"""

N = 5000    # Кількість елементів масиву.
             # Використовується у головній програмі для генерування масиву з випадкових чисел
             # Для повільних алгоритмів сортування з асимптотикою n**2 рекомендується
             # використовувати значення не більше 10к
             # Для швидких алгоритмів сортування з асимптотикою
             # nlog(n) встановіть значення 1 000 000


def sort(array):
    """ Сортування масиву
    :param array: Вхідний масив даних, що треба відсортувати.
    """
    n = len(array)
    for edge in range(n - 1, 0, -1):
        isSorted = True
        for i in range(edge):
            if array[i] > array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
                isSorted = False
        if isSorted: break


if __name__ == '__main__':
    a = [6, 11, 4, 13, 7]
    sort(a)




